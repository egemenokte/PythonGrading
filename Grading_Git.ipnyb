{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Grading_Git","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMim0PJDCZUat0WDBn4RRHH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"V6n_ElecGH5i"},"source":["# Course Grading\n","Please use the provided Excel template to upload and calculate the grades for your course. For more information, please refer to For source code, visit [github/egemenokte](https://github.com/egemenokte/PythonGrading).\n","\n","Please run the following cell to calculate grades. If you are using Chrome, an excel file with final grades will be automatically downloaded."]},{"cell_type":"code","metadata":{"id":"9a7A__C5HxD_"},"source":["#Clone the fithub repo\n","!git clone https://github.com/egemenokte/PythonGrading.git\n","%cd PythonGrading\n","#Import packages\n","import pandas as pd\n","import numpy as np\n","from google.colab import files\n","from Functions.GradeCalc import CalculateGrade\n","from IPython.display import clear_output \n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","print('Please upload the grade template file')\n","Final=CalculateGrade(files.upload())\n","clear_output()\n","Final.to_excel(\"Final.xlsx\") \n","files.download('Final.xlsx')\n","Final"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KGmoVNq1IdiW"},"source":["# Plotting the final letter grades"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"QsVfkVLMFmcQ","executionInfo":{"status":"ok","timestamp":1638414099027,"user_tz":360,"elapsed":448,"user":{"displayName":"Egemen Okte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17126993391878709027"}},"outputId":"cc16bab1-08ad-4f27-e8bb-929775647c2b"},"source":["sns.set()\n","Let=Final.sort_values(by=['Total'],ascending=False)\n","plt.hist(Let.Grade)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([9., 3., 2., 2., 0., 4., 2., 1., 1., 1.]),\n"," array([0. , 0.8, 1.6, 2.4, 3.2, 4. , 4.8, 5.6, 6.4, 7.2, 8. ]),\n"," <a list of 10 Patch objects>)"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]}]}